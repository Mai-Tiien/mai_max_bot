import telebot
import random
import requests
import sqlite3
from bs4 import BeautifulSoup

connect = sqlite3.connect('users.db', check_same_thread=False)
cursor = connect.cursor()

def db_table_val(user_id: int, user_name: str, balance: int):
    cursor.execute('INSERT OR REPLACE INTO login (user_id, user_name, balance) VALUES (?, ?, ?)',
                   (user_id, user_name, balance))
    connect.commit() 

TOKEN = '5769001050:AAEMultrMrM1V0E_MB5Mn0sfQA_A6QYfTME'
bot = telebot.TeleBot(TOKEN)
bot.can_join_groups = True

@bot.message_handler(commands=['start'])
def help_start(message):
    bot.send_message(message.chat.id, "–í–µ–¥—ñ—Ç—å –∑–∞–ø–∏—Ç –∫–æ–º–∞–Ω–¥, —è–∫—ñ–π –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –±–æ—Ç!")          

@bot.message_handler(commands=['id'])
def help_command(message):
    bot.send_message(message.chat.id, "–í–∞—à ID: {test}".format(test=message.chat.id)) 

@bot.message_handler(commands=['news'])
def help_news(message):
    url='https://www.liga.net/tag/frank-valter-shtaynmayer'
    response = requests.get(url)

    soup = BeautifulSoup(response.text, 'html.parser')
    headlines = soup.find('body').find_all('a', class_='title')
    rand = random.choice(headlines)
    
    for x in rand: 
        file_head=('‚ö° '+x.text.strip().replace('–®—Ç–∞–π–Ω–º–∞–π–µ—Ä', '–ú–∞–π –¢—ñ—î–Ω'))
        bot.reply_to(message, file_head)
            
    
@bot.message_handler(commands=['whoiam'])
def help_test(message):
    emp = ['–•–æ—Ö–æ–ª', '–ë–∞–π—Ä–∞–∫—Ç–∞—Ä', '–ë–∞–π–¥–æ–Ω', '–ó—î–ª—î–±–æ–±—ñ–∫', '–û–∫—Ä–∞–∏–Ω–µ—Ü', '–ë—Ä–æ–≤–∞—Ä—Å–∫–∞ –º–∞–∫–∞–∫–∞', '–¢–µ—Ä–Ω–æ–ø—ñ–≤—Å–∫–∞ —Ö–≤–æ–π–¥–∞', 
       '–ü–æ—Ä–æ—Ö–æ–±–æ—Ç', '–°–∞–ª–æ—ó–¥', '–ú–∞–π–¥–∞–Ω—É—Ç–∏–π', '–ë–∞–π—Ä–∞–∫—Ç–∞—Ä', '–†—É—Å–æ—Ñ–æ–±', '–ù–∞—Ç–æ–≤–µ—Ü', '–î–∂–∞–≤–µ–ª—ñ–Ω', '–ú–∞–∑–µ–ø–æ–Ω–µ—Ü—å', '–ö—ñ—Ü—è', '–ü–µ—Å']
    emp_text = [
        ', —â–æ –Ω–∞–º–∞–≥–∞—î—Ç—å—Å—è –≤–æ—Å–∫—Ä–µ—Å–∏—Ç—å –ë–∞–Ω–¥–µ—Ä—É',
        ', —â–æ —Ä–æ–∑—Ä–æ–±–ª—è—î –Ω–æ–≤—É –±—ñ–æ–ª–æ–≥—ñ—á–Ω—É –∑–±—Ä–æ—é',
        ', —â–æ —É—â–µ–º–ª—è —Ä—É—Å–∫–æ–≥–æ–≤–∞—Ä—è—â–µ–≥–æ',
        ', —â–æ —Å—Ç—Ä—ñ–ª—è—î –≤ –ö—É–±–∞–Ω—å',
        ', —â–æ –∑–º—É—Å–∏–≤ –ü—É—à–∏–ª–∏–Ω–∞ –∑ –î–ù–† —Å—ñ—Å—Ç–∏ –Ω–∞ –±—É—Ç–∏–ª–∫—É',
        ', —â–æ –ø—ñ—á–∫–∞—î —è–¥–µ—Ä–∫–æ—é –ø—Ç–∞—Ö—ñ–≤ –∑ –•–µ—Ä–æ—Å–æ–Ω—Å—å–∫–æ–≥–æ –∑–∞–ø–æ–≤—ñ–¥–Ω–∏–∫–∞',
        ', —â–æ –∫–æ–ø–∞—î –æ–¥–µ—Å—å–∫–µ –º–µ—Ç—Ä–æ',
        ', —â–æ –ø–æ–≥—Ä–æ–∂—É—î —è–¥–µ—Ä–∫–æ—é –†–æ—Å—ñ—ó',
        ', —â–æ –≤–∏–∫–æ–ø–∞–≤ –ß–æ—Ä–Ω–µ –º–æ—Ä–µ',
        ', —â–æ –æ—Å–æ–±–∏—Å—Ç–æ –∑ –õ–µ–Ω—ñ–Ω–∏–º –ø–∏—Å–∞–≤ –ï–Ω–µ—ó–¥—É –≤ 1917 —Ä–æ—Ü—ñ',
        ', —â–æ –¥–æ–Ω–±–∏—Ç—å –±–æ–º–±–∞—Å-–±—ñ–º–±–∞—Å',
        ', —â–æ –∫–æ–∂–µ–Ω —Ä–∞–Ω–æ–∫ —Å–ø–∞–ª—é—î —Ä–æ—Å—ñ–π—Å—å–∫—ñ –ø—Ä–∞–ø–æ—Ä–∏ —É –ª—å–≤—ñ–≤—Å—å–∫–∏—Ö —à–∫–æ–ª–∞—Ö',
        ', —â–æ —Ä–æ–∑–±–æ–º–±–∏–≤ –ê–Ω—Ç–æ–Ω—ñ–≤—Å—å–∫–∏–π –º—ñ—Å—Ç',
        ', —â–æ —ó—Å—Ç—å —Ä–æ—Å—ñ–π—Å—å–∫–∏—Ö –Ω–µ–º–æ–≤–ª—è—Ç –Ω–∞ —Å–Ω—ñ–¥–∞–Ω–æ–∫',
        ', —â–æ –ø—Ä–∏—à–∏–≤–∞—î —Å–≤–∞—Å—Ç–∏–∫—É –Ω–∞ —Ñ–æ—Ä–º—É –ó–°–£',
        ', —â–æ –ø—ñ–¥—ñ—Ä–≤–∞–≤ –∞–≤—Ç—ñ–≤–∫—É –î—É–≥—ñ–Ω–∏',
        ', —â–æ —Å—Ç–≤–æ—Ä–∏–≤ –±–∞–Ω–¥–µ—Ä–æ –º–æ–±—ñ–ª—å',
        ', —â–æ —Ä–æ–∑—Ä–æ–±–ª—è—î –Ω–∞–Ω–æ-–µ–∫–∑–æ—Å–∫–µ–ª–µ—Ç —É –ë—Ä–æ–≤–∞—Ä—Å—å–∫—ñ–π –Ω–∞–Ω–æ–ª–∞–±–æ—Ä–∞—Ç–æ—Ä—ñ—ó',
        ', —â–æ —Ä–æ–∑—à–∞—Ç—É—î —Å–∞–Ω–∫—Ü—ñ—î—é –ø—Ä–æ—Ç–∏ –†–æ—Å—ñ—ó',
        ', —â–æ —ó–±–µ –ø—É—Ç–ª—ñ—Ä–∞',
        ', —â–æ —ó–±–∞—à–µ —Å—ñ–ª—å',
        ', —â–æ —Ö–æ–¥–∏—Ç—å –≤ –ø—É–±–ª–∏—á–Ω—É –∫–∞—á–∞–ª–∫—É',
        ', —â–æ –¥–∏–≤–∏—Ç—å—Å—è –ì–µ–π –ø–æ—Ä–Ω–æ –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–º—É –ø–µ—Ä–µ–∫–ª–∞–¥—ñ',
        ', —â–æ –ø—ñ–¥–ø–∞–ª—é—î –ø–µ—Ç–∞—Ä–¥–∏',
        ', —â–æ –ª–∞–π–∫–∞—î –±–∞–∑–æ–≤–∞–Ω—ñ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –º–µ–º–∏'
    ]
    emp_list = emp[random.randint(0, 16)]
    emp_type = emp_text[random.randint(0, 25)]
    bot.send_message(message.chat.id, "Name: {test1}\nTitle: {test2}".format(test=message.chat.username, test1=message.from_user.first_name, test2='–í–∏ '+emp_list+emp_type))     

def get_coin():
    pow = sqlite3.connect('users.db')
    cursorPow = pow.cursor()
    cursorPow.execute('SELECT user_name, balance FROM login')
    rows = cursorPow.fetchall()
    for row in rows:
        coin = row[1]
    return coin

@bot.message_handler(commands=['bavovna']) 
def bavovna_command(message):
    url = 'https://www.unn.com.ua/uk/search?q=%D0%B1%D0%B0%D0%B2%D0%BE%D0%B2%D0%BD%D0%B0'
    res = requests.get(url)

    rd_soup = BeautifulSoup(res.text, 'html.parser')
    bv1 = rd_soup.find_all('div', class_='b-news-search-title')
    bv2 = random.choice(bv1)

    for text_bv in bv2:
        bavov = 'üí£ ' + text_bv.text
        bot.reply_to(message, bavov)
      
@bot.message_handler(commands=['maicredit'])
def maicredit_command(message):
    us_id = message.from_user.id
    us_name = message.from_user.first_name
    rn = random.randint(1,6)
   
    if rn == 1:
        bale = random.randint(15, 200)
        db_table_val(user_id=us_id, user_name=us_name, balance=get_coin() - bale)
        bot.reply_to(message, "*{name}*, —Ç–∏ —Ä–æ–∑—á–∞—Ä—É–≤–∞—Ç–∏ –≤–µ–ª–∏–∫–∏–π –≤–æ–∂–¥—å! –°–≤—è—Ç–æ—Å–ª–∞–≤ –∑—Ä–æ–±–∏—Ç—å –ø—É–ª—è —Ç–æ–±—ñ –≤ –ª–æ–± –≤–æ–≥–æ–Ω—å! –¢–∏ –≤—Ç—Ä–∞—Ç–∏–≤ -{num} –ú–∞–π–ö—Ä–µ–¥—ñ—Ç".format(name = message.from_user.first_name, num=bale), parse_mode="Markdown")
    
    if rn == 2:
        bale = random.randint(15, 100)
        db_table_val(user_id=us_id, user_name=us_name, balance=get_coin() - bale)
        bot.reply_to(message, "–ù–∞–∂–∞–ª—å *{name}*, —Ç–≤—ñ–π —Ä–µ–π—Ç–∏–Ω–≥ –≤–ø–∞–≤ –Ω–∞ -{num} –ú–∞–π–ö—Ä–µ–¥—ñ—Ç".format(name = message.from_user.first_name, num=bale), parse_mode="Markdown") 
    
    if rn >= 3:
        bale = random.randint(15, 250)
        db_table_val(user_id=us_id, user_name=us_name, balance=get_coin() + bale)
        bot.reply_to(message, "–í—ñ—Ç–∞—é *{name}*, —Ç–≤—ñ–π —Ä–µ–π—Ç–∏–Ω–≥ –ø—ñ–¥–Ω—è–≤—Å—è –Ω–∞ +{num} –ú–∞–π–ö—Ä–µ–¥—ñ—Ç".format(name = message.from_user.first_name, num=bale), parse_mode="Markdown") 

@bot.message_handler(commands=['balance']) 
def bl_command(message):
    con = sqlite3.connect('users.db')
    cursorObj = con.cursor()
    cursorObj.execute('SELECT user_name, balance FROM login ORDER BY balance DESC')
    rows = cursorObj.fetchall()
    balance_info = {}
    
    for row in rows:
        user_name = row[0]
        balance = row[1]
        
        # –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–ø–∏—Å–∫—É –∑ —Ç–∞–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º
        if balance in balance_info:
            balance_info[balance].append(user_name)
        else:
            balance_info[balance] = [user_name]
    
    result_text = "–ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:\n"
    
    for balance, users in balance_info.items():
        user_list = ", ".join(users)
        result_text += f"üí∏ –ë–∞–ª–∞–Ω—Å {balance} –ú–∞–π–ö—Ä–µ–¥—ñ—Ç: {user_list}\n"
    
    bot.reply_to(message, result_text)

@bot.message_handler(commands=['sneak']) 
def sneak_command(message):
    from_user_id = message.from_user.id
    from_user_name = message.from_user.first_name
    
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —É —è–∫–æ–≥–æ –±—É–¥—É—Ç—å –≤–∫—Ä–∞–¥–µ–Ω—ñ –ú–∞–π–ö—Ä–µ–¥—ñ—Ç
    # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –º–æ–∂–µ–º–æ –≤–∏–±–∏—Ä–∞—Ç–∏ –π–æ–≥–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    con = sqlite3.connect('users.db')
    cursorObj = con.cursor()
    cursorObj.execute('SELECT user_id, user_name, balance FROM login WHERE user_id != ?', (from_user_id,))
    rows = cursorObj.fetchall()
    
    if len(rows) == 0:
        bot.reply_to(message, "–ù–∞ –∂–∞–ª—å, –Ω–µ–º–∞—î —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–ª—è –∫—Ä–∞–¥—ñ–∂–∫–∏ –ú–∞–π–ö—Ä–µ–¥—ñ—Ç.")
        return
    
    # –í–∏–ø–∞–¥–∫–æ–≤–æ –≤–∏–±–∏—Ä–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –≤—ñ–¥ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å –≤–∫—Ä–∞–¥–µ–Ω—ñ –ú–∞–π–ö—Ä–µ–¥—ñ—Ç
    to_user_id, to_user_name, to_user_balance = random.choice(rows)
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—É –ø–æ–¥—ñ—é –∑ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—é 1/3 –¥–ª—è –≤–∫—Ä–∞–¥–µ–Ω–Ω—è –ú–∞–π–ö—Ä–µ–¥—ñ—Ç
    if random.randint(1, 3) == 1:
        # –Ø–∫—â–æ –≤–∫—Ä–∞–¥–µ–Ω–Ω—è —Å—Ç–∞–ª–æ—Å—è
        stolen_amount = random.randint(1, to_user_balance)  # –í–∫—Ä–∞–¥–µ–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—É —Å—É–º—É –∑ –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        db_table_val(user_id=to_user_id, user_name=to_user_name, balance=to_user_balance - stolen_amount)
        db_table_val(user_id=from_user_id, user_name=from_user_name, balance=get_coin() + stolen_amount)
        bot.reply_to(message, f"{from_user_name} –≤–∫—Ä–∞–≤ {stolen_amount} –ú–∞–π–ö—Ä–µ–¥—ñ—Ç —É {to_user_name}! üòà")
    if random.randint(1, 3) == 2:
        bot.reply_to(message, f"{from_user_name} –¢–∏ –ø—ñ–ø–∞–≤—Å—è, —Ç–æ–±—ñ –∑—Ä–æ–±–ª—è—Ç—å –≤–µ–ª–∏–∫—ñ–π Fisting!")
    else:
        # –Ø–∫—â–æ –≤–∫—Ä–∞–¥–µ–Ω–Ω—è –Ω–µ —Å—Ç–∞–ª–æ—Å—è
        bot.reply_to(message, f"{from_user_name}, –≤–∏ –Ω–∞–º–∞–≥–∞–ª–∏—Å—è –≤–∫—Ä–∞—Å—Ç–∏ –ú–∞–π–ö—Ä–µ–¥—ñ—Ç —É {to_user_name}, –∞–ª–µ –≤–∞—Å –≤–ø—ñ–π–º–∞–ª–∏! üöì")


while True:
    try:
        bot.polling(none_stop=True, interval=0)
    except Exception as e:
        print("–ü–æ–º–∏–ª–∫–∞: ", e)